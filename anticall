/**

//══════════════════════════════════════════════════════════════════════════════════════════════════════//
//                                                                                                      //
//                                ＷＨＡＴＳＡＰＰ ＢＯＴ－ＭＤ ＢＥＴＡ                                   //
//                                                                                                      // 
//                                         Ｖ：1．2．2                                                   // 
//                                                                                                      // 
//            ███████╗██╗   ██╗██╗  ██╗ █████╗ ██╗██╗         ███╗   ███╗██████╗                        //
//            ██╔════╝██║   ██║██║  ██║██╔══██╗██║██║         ████╗ ████║██╔══██╗                       //
//            ███████╗██║   ██║███████║███████║██║██║         ██╔████╔██║██║  ██║                       //
//            ╚════██║██║   ██║██╔══██║██╔══██║██║██║         ██║╚██╔╝██║██║  ██║                       //
//            ███████║╚██████╔╝██║  ██║██║  ██║██║███████╗    ██║ ╚═╝ ██║██████╔╝                       //
//            ╚══════╝ ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝╚══════╝    ╚═╝     ╚═╝╚═════╝                        //
//                                                                                                      //
//                                                                                                      //
//══════════════════════════════════════════════════════════════════════════════════════════════════════//

CURRENTLY RUNNING ON BETA VERSION!!
*
   * @project_name : Suhail-Md
   * @author : Suhail Tech Info
   * @youtube : https://www.youtube.com/c/@SuhailTechInfo
   * @information : Suhail-Md, A Multi-functional WhatsApp user bot.
   * @version 1.2.2 
*
   * Licensed under the GPL-3.0 License;
* 
   * ┌┤Created By Suhail Tech Info.
   * © 2023 Suhail-Md ✭ ⛥.
   * plugin date : 10/6/2023
* 
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
   * SOFTWARE.
**/

let antiCallMessage = process.env.ANTICALL_MESSAGE ||  "\`\`\`Hii this is Infinity-MAX ,a Personal Assistant!!\n\n\tSorry for now, we cannot receive calls, whether in a group or personal \n\n if you need help or request features please chat owner\n\nCall rejected automatically by - Infinity MAX\n\nPowered by Infinity Chatbot\`\`\`";



// Command object for the anti-call feature
/*
{
   cmdname: "anticall",  // Command name
   type: "owner",         // Type of user who can use the command
}
*/

// Function to check and disable call rejection feature
const _0x24ad93=_0x5b4c; 
(function(_0x50b3a2,_0xb5c8f){
   const _0xea06c2=_0x5b4c;
   const _0x158708=_0x50b3a2();
   while(!![]) {
      try {
         // Some complex encryption/decryption logic, keep as is unless modifications are needed.
         const _0x214a29 = calculateComplexValue();
         if(_0x214a29 === _0xb5c8f) break;
         else _0x158708.push(_0x158708.shift());
      } catch(_0x2d88b1) {
         _0x158708.push(_0x158708.shift());
      }
   }
}(_0x47da,0xecc3f));

const _0x48b34b=_0x1c87; 
(function(_0x59e32,_0x301416){
   const _0x2006be=_0x5b4c, _0x2aa6b3=_0x1c87, _0xa7b2f3=_0x59e32();
   while(!![]) {
      try {
         const _0x30b6e8 = calculateComplexValue();
         if(_0x30b6e8 === _0x301416) break;
         else _0xa7b2f3[_0x2006be(0x137)](_0xa7b2f3.shift());
      } catch(_0x33c54e) {
         _0xa7b2f3.push(_0xa7b2f3.shift());
      }
   }
}(_0x1336,0x21ea7));

// Anti-call related settings
let antiCallCountries=[], antiCallusers={}, bots=false;

// Define function for encrypted names or complex settings
function _0x5b4c(_0x2b0d35,_0x5a2bad){
   const _0x47da99 = _0x47da();
   return _0x5b4c = function(_0x5b4cd0,_0x13d039) {
      _0x5b4cd0 = _0x5b4cd0 - 0x117;
      return _0x47da99[_0x5b4cd0];
   }, _0x5b4c(_0x2b0d35,_0x5a2bad);
}

// Bot configuration and command handling
const { smd, botpic, send, Config, tlang, sleep, smdBuffer, prefix, bot_ } = require(_0x24ad93(0x119));

// Handle 'anticall' command and message replies
smd({'pattern': _0x48b34b(0x1e2), 'desc': _0x48b34b(0x1d3), 'category': _0x48b34b(0x1b9), 'use': _0x24ad93(0x13a), 'filename': __filename}, async (_0x3079c3,_0x16cfc8) => {
   let _0x20f464 = await bot_[_0x48b34b(0x1c6)]({'id': _0x48b34b(0x1d1) + _0x3079c3[_0x48b34b(0x1b8)]}) || await bot_[_0x48b34b(0x1bd)]({'id': _0x48b34b(0x1d1) + _0x3079c3[_0x48b34b(0x1b8)]});
   let _0xfa720 = _0x16cfc8 ? _0x16cfc8.toLowerCase().trim() : '';
   
   // Handle command execution logic
   if (_0xfa720.includes("disable")) {
      // Disable logic
      return await _0x3079c3.send(_0x48b34b(0x14c));
   }
   else {
      // Further condition logic can be edited for command handling
   }
});

// More encrypted code follows, adjust based on requirement

